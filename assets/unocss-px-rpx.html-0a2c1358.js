import{_ as t,r as o,o as c,c as i,b as n,d as a,e as p,a as e}from"./app-e5636f12.js";const l={},r=e(`<p>最近公司在做小程序的项目，因为之前一直在写 web 项目，经常使用 unocss 这个工具，所以这次也想在 uniapp 里面使用这个插件。但是遇到了 px 转换为 upx 的问题。众所周知，uniapp 的单位是 rpx，也是小程序的尺寸单位，所以在这里自行编写了一个插件。</p><p>最开始是用处的开源社区的一个项目，使用之后发现指令处理有问题，例如 height 400px 会被处理为 100rem， 但是如果是 line height 400px 就会被处理成很离谱的数字。我大概看拉一下作者的实现，感觉过于复杂了，本着自己的需求就开发一个适合自己的插件。</p><p>先说一下思路，在 uniapp 的多端编译里面也有多种尺寸单位，web端是 rem，小程序端是 rpx， rpx -&gt; rem uniapp 内部已经处理了。所以我们只需要将 px 转为 rpx。剩下的就丢给 uniapp处理。</p><p>其实代码很简单，模仿官方预设 @unocss/preset-rem-to-px 这个插件就可以搞定。下面的核心代码就是 <code>i[1] = value.replace(pxToVwRE, (_, p1) =&gt; </code>\${p1}rpx<code>);</code> 匹配到字符串的 px 将其替换为 rpx。其实大部分逻辑 unocss 都已经帮我们处理好了。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pxToVwRE <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(-?[\\.\\d]+)px</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">pxToVwPreset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;@unocss/preset-px-to-upx&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">postprocess</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">util</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      util<span class="token punctuation">.</span>entries<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> value <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">&amp;&amp;</span> pxToVwRE<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>pxToVwRE<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> p1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>p1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">rpx</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在使用的过程中也遇到问题，就是在使用 unocss 的指令时出现了 uniapp 没有处理的单位。</p><p><img src="https://cdn.jsdelivr.net/gh/Journey98/A-week-to-learn@assert/image/47c1735b0d9b09a4fe2911acf9a916d66d6037f9405d2161775c6f22e2fa48a0.png" alt="图 0"></p><p><img src="https://cdn.jsdelivr.net/gh/Journey98/A-week-to-learn@assert/image/ecaaecc35c054bcabc42900839c3a60a2bf82a2913c975893369ff7547bb032d.png" alt="图 1"></p><p>这里的问题是因为在 vite 的执行顺序上 unocss 的 transformerDirectives 模块处理时机晚于 uniapp 插件的处理时间那么就会出现上面的现象。所以要配置一下 unocss 的 transformerDirectives 处理时机</p>`,9),u={href:"https://unocss.dev/config/transformers#transformers",target:"_blank",rel:"noopener noreferrer"},k={href:"https://cn.vitejs.dev/guide/api-plugin.html#plugin-ordering",target:"_blank",rel:"noopener noreferrer"},d=e(`<p><code>transformerDirectives({ enforce: &#39;pre&#39;, })</code></p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>下面是正确的使用方式。这里会发现多了一个 <code>@unocss/preset-rem-to-px</code> 这个插件是为了兼容以下使用方式 <code>&lt;div class=&quot;w-30&quot;&gt;&lt;/div&gt;</code>, 这个时候就需要将 rem 转为 px了。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;unocss/vite&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> presetUno <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;unocss&#39;</span>
<span class="token keyword">import</span> transformerDirectives <span class="token keyword">from</span> <span class="token string">&#39;@unocss/transformer-directives&#39;</span>
<span class="token keyword">import</span> pxToUpx <span class="token keyword">from</span> <span class="token string">&#39;unocss-preset-px-to-rpx&#39;</span>
<span class="token keyword">import</span> presetRemToPx <span class="token keyword">from</span> <span class="token string">&#39;@unocss/preset-rem-to-px&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">//@ts-ignore</span>
  presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">presetUno</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">presetRemToPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">pxToUpx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  transformers<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">transformerDirectives</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      enforce<span class="token operator">:</span> <span class="token string">&#39;pre&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function v(m,f){const s=o("ExternalLinkIcon");return c(),i("div",null,[r,n("p",null,[n("a",u,[a("unocss transformers 地址"),p(s)])]),n("p",null,[n("a",k,[a("vite文档 enforce 字段"),p(s)])]),d])}const x=t(l,[["render",v],["__file","unocss-px-rpx.html.vue"]]);export{x as default};
